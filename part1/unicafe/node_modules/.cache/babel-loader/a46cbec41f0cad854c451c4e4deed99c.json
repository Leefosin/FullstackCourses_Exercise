{"ast":null,"code":"var _jsxFileName = \"F:\\\\FullStack\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 24\n}, this);\n\n_c = Button;\n\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 39\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'good',\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'neutral',\n        value: props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'bad',\n        value: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'All',\n        value: props.good + props.bad + props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'average',\n        value: (props.good - props.bad) / (props.good + props.bad + props.neutral)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: 'positive',\n        value: props.good / (props.good + props.neutral + props.bad) * 100 + '%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [Value, setValue] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const goodClick = () => setValue({ ...Value,\n    good: Value.good + 1\n  });\n\n  const neutralClick = () => setValue({ ...Value,\n    neutral: Value.neutral + 1\n  });\n\n  const badClick = () => setValue({ ...Value,\n    bad: Value.bad + 1\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: goodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: neutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: badClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), Value.good + Value.neutral + Value.bad ? /*#__PURE__*/_jsxDEV(Statistics, {\n      props: Value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"1Yu1qcThWLx3VgZVYmi/MniXX8g=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","props","handleClick","text","StatisticLine","value","Statistics","good","neutral","bad","App","Value","setValue","goodClick","neutralClick","badClick"],"sources":["F:/FullStack/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\nconst Button =(props)=><button onClick={props.handleClick}>{props.text}</button>\nconst StatisticLine =({text,value}) =><tr><td>{text}</td><td>{value}</td></tr>\nconst Statistics = ({props})=>{\n    return(\n        <div>\n            <table>\n            <StatisticLine text={'good'} value={props.good}/>\n            <StatisticLine text={'neutral'} value={props.neutral}/>\n            <StatisticLine text={'bad'} value={props.bad}/>\n            <StatisticLine text={'All'} value={props.good+props.bad+props.neutral}/>\n            <StatisticLine text={'average'} value={(props.good-props.bad)/(props.good+props.bad+props.neutral)}/>\n            <StatisticLine text={'positive'} value={((props.good/(props.good+props.neutral+props.bad))*100+'%')}/>\n            </table>\n        </div>\n    )\n}\nconst App = () => {\n    // save clicks of each button to its own state\n    const [Value,setValue] =useState(\n        {\n            good:0,\n            neutral:0,\n            bad:0,\n        }\n    )\n    const goodClick =() =>setValue({...Value, good:Value.good+1,});\n    const neutralClick =() => setValue({...Value, neutral:Value.neutral+1,});\n    const badClick =() =>setValue({...Value, bad:Value.bad+1,});\n    return <div>\n        <h1>give feedback</h1>\n        <Button handleClick={goodClick} text =\"good\"/>\n        <Button handleClick={neutralClick} text=\"neutral\"/>\n        <Button handleClick={badClick} text=\"bad\"/><br/>\n        <h1>statistics</h1>\n        {(Value.good+Value.neutral+Value.bad)?<Statistics props={Value}/>:\n            (<h4>No feedback given</h4>)}\n\n    </div>\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}